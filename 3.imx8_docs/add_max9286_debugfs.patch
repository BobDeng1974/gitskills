diff --git a/drivers/media/platform/imx8/max9286.c b/drivers/media/platform/imx8/max9286.c
index 73841a8..ac65604 100644
--- a/drivers/media/platform/imx8/max9286.c
+++ b/drivers/media/platform/imx8/max9286.c
@@ -23,11 +23,13 @@
 #include <linux/pinctrl/consumer.h>
 #include <linux/regulator/consumer.h>
 #include <media/v4l2-subdev.h>
+#include <linux/debugfs.h>
 
 #include "max9286.h"
 
 #define MAX9271_MAX_SENSOR_NUM	4
 #define CAMERA_USES_15HZ
+//#define debug
 
 #define ADDR_MAX9286		0x6A
 #define ADDR_MAX9271		0x40
@@ -2780,6 +2782,36 @@ static int max9286_link_setup(struct media_entity *entity,
 	.link_setup = max9286_link_setup,
 };
 
+static int max9286_reg_show(struct seq_file *s, void *data)
+{
+	struct sensor_data *max9286_data = s->private;
+	unsigned char i,index;
+	seq_printf(s,"Dump MAX9286 registers:\r\n");
+
+	for (i = 0; i < 0x72; i++)
+		seq_printf(s,"MAX9286 Reg 0x%02x = 0x%x.\r\n", i, max9286_read_reg(max9286_data, i));
+
+	for(index=0;index<4;index++){
+		seq_printf(s,"max9271_dump_registers: index = %d.\r\n", index);
+		for (i = 0; i < 0x20; i++)
+			seq_printf(s,"MAX9271 Reg 0x%02x = 0x%x.\r\n", i, max9271_read_reg(max9286_data, index, i));
+	}
+    return 0;
+}
+
+static int max9286_dbg_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, max9286_reg_show, inode->i_private);
+}
+
+static const struct file_operations max9286_debug_fops = {
+	.owner = THIS_MODULE,
+	.open = max9286_dbg_open,
+	.read = seq_read,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
 /*!
  * max9286 I2C probe function
  *
@@ -2793,6 +2825,7 @@ static int max9286_probe(struct i2c_client *client,
 	struct sensor_data *max9286_data;
 	struct v4l2_subdev *sd;
 	int retval;
+	struct dentry *debugfs_max9286;
 
 	max9286_data = devm_kzalloc(dev, sizeof(*max9286_data), GFP_KERNEL);
 	if (!max9286_data)
@@ -2931,6 +2964,17 @@ static int max9286_probe(struct i2c_client *client,
 
 	dev_info(&max9286_data->i2c_client->dev,
 			"max9286_mipi is found, name %s\n", sd->name);
+
+	debugfs_max9286 = debugfs_create_dir("max9286_debugfs", NULL);
+	if (IS_ERR_OR_NULL(debugfs_max9286))
+		debugfs_max9286 = NULL;
+
+	if (debugfs_max9286) {
+		(void)debugfs_create_file("max9286reg", S_IRUGO,debugfs_max9286,
+				max9286_data, &max9286_debug_fops);
+		pr_warning("create max9286 debugfs:/sys/kernel/debug/max9286_debugfs/max9286reg.\n");
+	}
+
 	return retval;
 }
 
